==id $VER: triton_lib.sfd 2.0 (10.8.2025)
==license Amiga specific files and diffs Copyright (C) 2025 amigazen project
==license OpenTriton Copyright (C) 1993-1998 by OpenTriton Project
==license Changes in 6.115 by amigazen project
==license Refactoring for NDK3.2 by amigazen project
==license This library is freely distributable under GPL terms
==license
* "triton.library"
==license
==license This is the OpenTriton 2.0 release of the "triton.library" user
==license interface creation and management tool kit.
==base _TritonBase
==basetype struct Library *
==libname triton.library
==include <exec/types.h>
==include <intuition/intuition.h>
==include <intuition/intuitionbase.h>
==include <graphics/gfx.h>
==include <utility/tagitem.h>
==typedef TR_App
==typedef TR_Project
==typedef TR_Message
==typedef TR_Class
==typedef TROD_Object
==typedef TR_Method
==bias 30
==public
==version 1.0
struct TR_Project * TR_OpenProject(struct TR_App *app, struct TagItem * taglist) (a1,a0)
VOID TR_CloseProject(struct TR_Project *project) (a0)
LONG TR_FirstOccurance(UBYTE ch, STRPTR str) (d0,a0)
LONG TR_NumOccurances(UBYTE ch, STRPTR str) (d0,a0)
STRPTR TR_GetErrorString(UWORD num) (d0)
LONG TR_SetAttribute(struct TR_Project *project, ULONG ID, ULONG attribute, ULONG value) (a0,d0,d1,d2)
ULONG TR_GetAttribute(struct TR_Project *project, ULONG ID, ULONG attribute) (a0,d0,d1)
VOID TR_LockProject(struct TR_Project *project) (a0)
VOID TR_UnlockProject(struct TR_Project *project) (a0)
==version 1.1
ULONG TR_AutoRequest(struct TR_App *app, struct TR_Project *lockproject, struct TagItem * wintags) (a1,a0,a2)
ULONG TR_EasyRequest(struct TR_App *app, STRPTR bodyfmt, STRPTR gadfmt, struct TagItem * taglist) (a1,a2,a3,a0)
struct TR_App * TR_CreateApp(struct TagItem * apptags) (a1)
VOID TR_DeleteApp(struct TR_App *app) (a1)
struct TR_Message * TR_GetMsg(struct TR_App *app) (a1)
VOID TR_ReplyMsg(struct TR_Message *message) (a1)
ULONG TR_Wait(struct TR_App *app, ULONG otherbits) (a1,d0)
VOID TR_CloseWindowSafely(struct Window * window) (a0)
UWORD TR_GetLastError(struct TR_App *app) (a1)
struct Screen * TR_LockScreen(struct TR_Project *project) (a0)
VOID TR_UnlockScreen(struct Screen * screen) (a0)
struct Window * TR_ObtainWindow(struct TR_Project *project) (a0)
VOID TR_ReleaseWindow(struct Window * window) (a0)
ULONG TR_SendMessage(struct TR_Project *project, ULONG objectid, ULONG messageid, APTR messagedata) (a0,d0,d1,a1)
BOOL TR_AddClass(struct TR_App *app, ULONG tag, ULONG supertag, TR_Method defaultmethod, ULONG datasize, struct TagItem * tags) (a1,d0,d1,a2,d2,a0)
==version 2.0
VOID TR_DrawFrame(struct TR_Project *project, struct RastPort * rp, UWORD left, UWORD top, UWORD width, UWORD height, UWORD type, BOOL inverted) (a0,a1,d1,d2,d3,d4,d0,d5)
ULONG TR_FrameBorderWidth(struct TR_Project *project, UWORD type) (a0,d0)
ULONG TR_FrameBorderHeight(struct TR_Project *project, UWORD type) (a0,d0)
ULONG TR_TextWidth(struct TR_Project *project, STRPTR text, ULONG flags) (a0,a2,d0)
ULONG TR_TextHeight(struct TR_Project *project, STRPTR text, ULONG flags) (a0,a2,d0)
VOID TR_PrintText(struct TR_Project *project, struct RastPort * rp, STRPTR text, ULONG x, ULONG y, ULONG width, ULONG flags) (a0,a1,a2,d1,d2,d3,d0)
ULONG TR_GetPen(struct TR_Project *project, ULONG pentype, ULONG pendata) (a0,d0,d1)
ULONG TR_DoMethod(struct TROD_Object *object, ULONG messageid, APTR data) (a0,d0,a1)
ULONG TR_DoMethodClass(struct TROD_Object *object, ULONG messageid, APTR data, struct TR_Class *class) (a0,d0,a1,a2)
VOID TR_AreaFill(struct TR_Project *project, struct RastPort * rp, ULONG left, ULONG top, ULONG right, ULONG bottom, ULONG type, VOID *dummy) (a0,a1,d0,d1,d2,d3,d4,a2)
struct TR_Message * TR_CreateMsg(struct TR_App *app) (a1)
==private
==end
