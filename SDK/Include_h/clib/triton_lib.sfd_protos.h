#ifndef CLIB_TRITON_LIB_SFD_PROTOS_H
#define CLIB_TRITON_LIB_SFD_PROTOS_H

/*
** 'C' prototypes. For use with 32 bit integers only.
**
** Copyright 1993-1998 by OpenTriton Project
** Changes in 6.115 by amigazen project
** Refactoring for NDK3.2 by amigazen project
** This library is freely distributable.
** This is the OpenTriton 2.0 release of the "triton.library" user
** interface creation and management tool kit.
** I'm grateful for any enhancement requests, bug reports and especially bug
** fixes. Contact: amigazen@amigazen.org
**
** Generated by LibDescConverter from an sfd file
*/

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif
#ifndef INTUITION_INTUITION_H
#include <intuition/intuition.h>
#endif
#ifndef INTUITION_INTUITIONBASE_H
#include <intuition/intuitionbase.h>
#endif
#ifndef GRAPHICS_GFX_H
#include <graphics/gfx.h>
#endif
#ifndef UTILITY_TAGITEM_H
#include <utility/tagitem.h>
#endif

/* "triton.library"*/
/*--- functions in V80 or higher ---*/
APTR TR_OpenProject(APTR app, struct TagItem *taglist);
void TR_CloseProject(APTR project);
LONG TR_FirstOccurance(UBYTE ch, STRPTR str);
LONG TR_NumOccurances(UBYTE ch, STRPTR str);
STRPTR TR_GetErrorString(LONG num);
LONG TR_SetAttribute(APTR project, LONG ID, LONG attribute, LONG value);
LONG TR_GetAttribute(APTR project, LONG ID, LONG attribute);
void TR_LockProject(APTR project);
void TR_UnlockProject(APTR project);
/*--- functions in V81 or higher ---*/
LONG TR_AutoRequest(APTR app, APTR lockproject, struct TagItem *wintags);
LONG TR_EasyRequest(APTR app, STRPTR bodyfmt, STRPTR gadfmt, struct TagItem *taglist);
APTR TR_CreateApp(struct TagItem *apptags);
void TR_DeleteApp(APTR app);
APTR TR_GetMsg(APTR app);
void TR_ReplyMsg(APTR message);
LONG TR_Wait(APTR app, ULONG otherbits);
void TR_CloseWindowSafely(struct Window *window);
LONG TR_GetLastError(APTR app);
void TR_LockScreen(APTR project);
void TR_UnlockScreen(struct Screen *screen);
APTR TR_ObtainWindow(APTR project);
void TR_ReleaseWindow(struct Window *window);
LONG TR_SendMessage(APTR project, LONG objectid, LONG messageid, APTR messagedata);
LONG TR_AddClass(APTR app, LONG tag, LONG supertag, LONG defaultmethod, LONG datasize, struct TagItem *tags);
/*--- functions in V180 or higher ---*/
void TR_DrawFrame(APTR project, struct RastPort *rp, LONG left, LONG top, LONG width, LONG height, LONG type, LONG inverted);
LONG TR_FrameBorderWidth(APTR project, LONG type);
LONG TR_FrameBorderHeight(APTR project, LONG type);
LONG TR_TextWidth(APTR project, STRPTR text, LONG flags);
LONG TR_TextHeight(APTR project, STRPTR text, LONG flags);
void TR_PrintText(APTR project, struct RastPort *rp, STRPTR text, LONG x, LONG y, LONG width, LONG flags);
LONG TR_GetPen(APTR project, LONG pentype, LONG pendata);
LONG TR_DoMethod(APTR object, LONG messageid, APTR data);
LONG TR_DoMethodClass(APTR object, LONG messageid, APTR data, APTR class);
void TR_AreaFill(APTR project, struct RastPort *rp, LONG left, LONG top, LONG right, LONG bottom, LONG type, APTR dummy);
APTR TR_CreateMsg(APTR app);

#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif /* CLIB_TRITON_LIB_SFD_PROTOS_H */
